|Question1
Q1 <= ControlUnit:inst.Q1
Start => ControlUnit:inst.Start
CLK => CLKN.IN0
reset => resetn.IN0
reset => NewLCD:inst4.Reset~
XIN[0] => Datapath:inst1.XIN[0]
XIN[1] => Datapath:inst1.XIN[1]
XIN[2] => Datapath:inst1.XIN[2]
XIN[3] => Datapath:inst1.XIN[3]
XIN[4] => Datapath:inst1.XIN[4]
XIN[5] => Datapath:inst1.XIN[5]
XIN[6] => Datapath:inst1.XIN[6]
XIN[7] => Datapath:inst1.XIN[7]
YIN[0] => Datapath:inst1.YIN[0]
YIN[1] => Datapath:inst1.YIN[1]
YIN[2] => Datapath:inst1.YIN[2]
YIN[3] => Datapath:inst1.YIN[3]
YIN[4] => Datapath:inst1.YIN[4]
YIN[5] => Datapath:inst1.YIN[5]
YIN[6] => Datapath:inst1.YIN[6]
YIN[7] => Datapath:inst1.YIN[7]
Q0 <= ControlUnit:inst.Q0
Z <= Datapath:inst1.Z
LCD_RS <= NewLCD:inst4.LCD_RS
CLK50 => NewLCD:inst4.CLK_50MHz
DBUS[0] <> NewLCD:inst4.DATA_BUS[0]
DBUS[1] <> NewLCD:inst4.DATA_BUS[1]
DBUS[2] <> NewLCD:inst4.DATA_BUS[2]
DBUS[3] <> NewLCD:inst4.DATA_BUS[3]
DBUS[4] <> NewLCD:inst4.DATA_BUS[4]
DBUS[5] <> NewLCD:inst4.DATA_BUS[5]
DBUS[6] <> NewLCD:inst4.DATA_BUS[6]
DBUS[7] <> NewLCD:inst4.DATA_BUS[7]
X[0] <= Datapath:inst1.X[0]
X[1] <= Datapath:inst1.X[1]
X[2] <= Datapath:inst1.X[2]
X[3] <= Datapath:inst1.X[3]
X[4] <= Datapath:inst1.X[4]
X[5] <= Datapath:inst1.X[5]
X[6] <= Datapath:inst1.X[6]
X[7] <= Datapath:inst1.X[7]
Y[0] <= Datapath:inst1.Y[0]
Y[1] <= Datapath:inst1.Y[1]
Y[2] <= Datapath:inst1.Y[2]
Y[3] <= Datapath:inst1.Y[3]
Y[4] <= Datapath:inst1.Y[4]
Y[5] <= Datapath:inst1.Y[5]
Y[6] <= Datapath:inst1.Y[6]
Y[7] <= Datapath:inst1.Y[7]
LCD_E <= NewLCD:inst4.LCD_E
LCD_RW <= NewLCD:inst4.LCD_RW
LCD_ONOFF <= NewLCD:inst4.LCD_STATUS_OUT
LCD_BLONOFF <= NewLCD:inst4.LCD_BL_STATUS_OUT
HEX6[0] <= SEG7_LUT:inst3.oSEG[0]
HEX6[1] <= SEG7_LUT:inst3.oSEG[1]
HEX6[2] <= SEG7_LUT:inst3.oSEG[2]
HEX6[3] <= SEG7_LUT:inst3.oSEG[3]
HEX6[4] <= SEG7_LUT:inst3.oSEG[4]
HEX6[5] <= SEG7_LUT:inst3.oSEG[5]
HEX6[6] <= SEG7_LUT:inst3.oSEG[6]
Sum[0] <= Datapath:inst1.Sum[0]
Sum[1] <= Datapath:inst1.Sum[1]
Sum[2] <= Datapath:inst1.Sum[2]
Sum[3] <= Datapath:inst1.Sum[3]
Sum[4] <= Datapath:inst1.Sum[4]
Sum[5] <= Datapath:inst1.Sum[5]
Sum[6] <= Datapath:inst1.Sum[6]
Sum[7] <= Datapath:inst1.Sum[7]
HEX7[0] <= SEG7_LUT:inst2.oSEG[0]
HEX7[1] <= SEG7_LUT:inst2.oSEG[1]
HEX7[2] <= SEG7_LUT:inst2.oSEG[2]
HEX7[3] <= SEG7_LUT:inst2.oSEG[3]
HEX7[4] <= SEG7_LUT:inst2.oSEG[4]
HEX7[5] <= SEG7_LUT:inst2.oSEG[5]
HEX7[6] <= SEG7_LUT:inst2.oSEG[6]


|Question1|ControlUnit:inst
Q1 <= DQ1.DB_MAX_OUTPUT_PORT_TYPE
reset => resetn.IN0
CLK => DQ1.CLK
CLK => DQ0.CLK
Start => DIdle_Start.IN0
Q0 <= DQ0.DB_MAX_OUTPUT_PORT_TYPE
LSA <= <GND>
SelB <= <GND>
SF <= DEC24:D.Y1N
Sub <= DEC24:D.Y1N
LSB <= DCheckZ_Z.DB_MAX_OUTPUT_PORT_TYPE
Z => DCheckZ_Z.IN0
Z => ZN.IN0
SelA <= DCheckZ_ZN.DB_MAX_OUTPUT_PORT_TYPE
ENB <= enaor.DB_MAX_OUTPUT_PORT_TYPE
ENA <= enbor.DB_MAX_OUTPUT_PORT_TYPE


|Question1|ControlUnit:inst|DEC24:D
Y3N <= inst3.DB_MAX_OUTPUT_PORT_TYPE
G => 7.IN0
A => 8.IN0
B => 11.IN0
Y0N <= inst.DB_MAX_OUTPUT_PORT_TYPE
Y1N <= inst1.DB_MAX_OUTPUT_PORT_TYPE
Y2N <= inst2.DB_MAX_OUTPUT_PORT_TYPE


|Question1|Datapath:inst1
Z <= ZFlag:zflag.Z
CLK => ZFlag:zflag.CLK
CLK => Register:RegY.CLK
CLK => Register:RegX.CLK
SF => ZFlag:zflag.SF
reset => ZFlag:zflag.reset
reset => Register:RegY.reset
reset => Register:RegX.reset
Sub => Adder8bit:XYSum.Sub
SelB => Register:RegY.Sel
LSB => Register:RegY.LS
ENB => Register:RegY.EN
YIN[0] => Register:RegY.Data1[0]
YIN[1] => Register:RegY.Data1[1]
YIN[2] => Register:RegY.Data1[2]
YIN[3] => Register:RegY.Data1[3]
YIN[4] => Register:RegY.Data1[4]
YIN[5] => Register:RegY.Data1[5]
YIN[6] => Register:RegY.Data1[6]
YIN[7] => Register:RegY.Data1[7]
SelA => Register:RegX.Sel
LSA => Register:RegX.LS
ENA => Register:RegX.EN
XIN[0] => Register:RegX.Data1[0]
XIN[1] => Register:RegX.Data1[1]
XIN[2] => Register:RegX.Data1[2]
XIN[3] => Register:RegX.Data1[3]
XIN[4] => Register:RegX.Data1[4]
XIN[5] => Register:RegX.Data1[5]
XIN[6] => Register:RegX.Data1[6]
XIN[7] => Register:RegX.Data1[7]
Sum[0] <= Adder8bit:XYSum.R[0]
Sum[1] <= Adder8bit:XYSum.R[1]
Sum[2] <= Adder8bit:XYSum.R[2]
Sum[3] <= Adder8bit:XYSum.R[3]
Sum[4] <= Adder8bit:XYSum.R[4]
Sum[5] <= Adder8bit:XYSum.R[5]
Sum[6] <= Adder8bit:XYSum.R[6]
Sum[7] <= Adder8bit:XYSum.R[7]
X[0] <= Register:RegX.Q[0]
X[1] <= Register:RegX.Q[1]
X[2] <= Register:RegX.Q[2]
X[3] <= Register:RegX.Q[3]
X[4] <= Register:RegX.Q[4]
X[5] <= Register:RegX.Q[5]
X[6] <= Register:RegX.Q[6]
X[7] <= Register:RegX.Q[7]
Y[0] <= Register:RegY.Q[0]
Y[1] <= Register:RegY.Q[1]
Y[2] <= Register:RegY.Q[2]
Y[3] <= Register:RegY.Q[3]
Y[4] <= Register:RegY.Q[4]
Y[5] <= Register:RegY.Q[5]
Y[6] <= Register:RegY.Q[6]
Y[7] <= Register:RegY.Q[7]


|Question1|Datapath:inst1|ZFlag:zflag
Z <= inst.DB_MAX_OUTPUT_PORT_TYPE
reset => inst8.IN0
data[0] => inst3.IN7
data[1] => inst3.IN6
data[2] => inst3.IN4
data[3] => inst3.IN5
data[4] => inst3.IN3
data[5] => inst3.IN1
data[6] => inst3.IN2
data[7] => inst3.IN0
SF => inst2.IN1
SF => inst1.IN0
CLK => inst.CLK


|Question1|Datapath:inst1|Adder8bit:XYSum
R[0] <= FA:inst.S
R[1] <= FA:inst2.S
R[2] <= FA:inst3.S
R[3] <= FA:inst4.S
R[4] <= FA:inst5.S
R[5] <= FA:inst6.S
R[6] <= FA:inst7.S
R[7] <= FA:inst8.S
F[0] => FA:inst.A
F[1] => FA:inst2.A
F[2] => FA:inst3.A
F[3] => FA:inst4.A
F[4] => FA:inst5.A
F[5] => FA:inst6.A
F[6] => FA:inst7.A
F[7] => FA:inst8.A
I[0] => xor1.IN0
I[1] => xoe2.IN1
I[2] => xor3.IN1
I[3] => xor4.IN1
I[4] => xor5.IN1
I[5] => xor6.IN1
I[6] => xor7.IN1
I[7] => xor8.IN1
Sub => xor1.IN1
Sub => FA:inst.Cin
Sub => xoe2.IN0
Sub => xor3.IN0
Sub => xor4.IN0
Sub => xor5.IN0
Sub => xor7.IN0
Sub => xor6.IN0
Sub => xor8.IN0


|Question1|Datapath:inst1|Adder8bit:XYSum|FA:inst
Cout <= inst6.DB_MAX_OUTPUT_PORT_TYPE
A => inst3.IN0
A => inst2.IN0
A => inst.IN0
B => inst3.IN1
B => inst4.IN0
B => inst.IN1
Cin => inst4.IN1
Cin => inst2.IN1
Cin => inst1.IN1
S <= inst1.DB_MAX_OUTPUT_PORT_TYPE


|Question1|Datapath:inst1|Adder8bit:XYSum|FA:inst2
Cout <= inst6.DB_MAX_OUTPUT_PORT_TYPE
A => inst3.IN0
A => inst2.IN0
A => inst.IN0
B => inst3.IN1
B => inst4.IN0
B => inst.IN1
Cin => inst4.IN1
Cin => inst2.IN1
Cin => inst1.IN1
S <= inst1.DB_MAX_OUTPUT_PORT_TYPE


|Question1|Datapath:inst1|Adder8bit:XYSum|FA:inst3
Cout <= inst6.DB_MAX_OUTPUT_PORT_TYPE
A => inst3.IN0
A => inst2.IN0
A => inst.IN0
B => inst3.IN1
B => inst4.IN0
B => inst.IN1
Cin => inst4.IN1
Cin => inst2.IN1
Cin => inst1.IN1
S <= inst1.DB_MAX_OUTPUT_PORT_TYPE


|Question1|Datapath:inst1|Adder8bit:XYSum|FA:inst4
Cout <= inst6.DB_MAX_OUTPUT_PORT_TYPE
A => inst3.IN0
A => inst2.IN0
A => inst.IN0
B => inst3.IN1
B => inst4.IN0
B => inst.IN1
Cin => inst4.IN1
Cin => inst2.IN1
Cin => inst1.IN1
S <= inst1.DB_MAX_OUTPUT_PORT_TYPE


|Question1|Datapath:inst1|Adder8bit:XYSum|FA:inst5
Cout <= inst6.DB_MAX_OUTPUT_PORT_TYPE
A => inst3.IN0
A => inst2.IN0
A => inst.IN0
B => inst3.IN1
B => inst4.IN0
B => inst.IN1
Cin => inst4.IN1
Cin => inst2.IN1
Cin => inst1.IN1
S <= inst1.DB_MAX_OUTPUT_PORT_TYPE


|Question1|Datapath:inst1|Adder8bit:XYSum|FA:inst7
Cout <= inst6.DB_MAX_OUTPUT_PORT_TYPE
A => inst3.IN0
A => inst2.IN0
A => inst.IN0
B => inst3.IN1
B => inst4.IN0
B => inst.IN1
Cin => inst4.IN1
Cin => inst2.IN1
Cin => inst1.IN1
S <= inst1.DB_MAX_OUTPUT_PORT_TYPE


|Question1|Datapath:inst1|Adder8bit:XYSum|FA:inst6
Cout <= inst6.DB_MAX_OUTPUT_PORT_TYPE
A => inst3.IN0
A => inst2.IN0
A => inst.IN0
B => inst3.IN1
B => inst4.IN0
B => inst.IN1
Cin => inst4.IN1
Cin => inst2.IN1
Cin => inst1.IN1
S <= inst1.DB_MAX_OUTPUT_PORT_TYPE


|Question1|Datapath:inst1|Adder8bit:XYSum|FA:inst8
Cout <= inst6.DB_MAX_OUTPUT_PORT_TYPE
A => inst3.IN0
A => inst2.IN0
A => inst.IN0
B => inst3.IN1
B => inst4.IN0
B => inst.IN1
Cin => inst4.IN1
Cin => inst2.IN1
Cin => inst1.IN1
S <= inst1.DB_MAX_OUTPUT_PORT_TYPE


|Question1|Datapath:inst1|Register:RegY
Q[0] <= LPM_FF:ff8.q[0]
Q[1] <= LPM_FF:ff8.q[1]
Q[2] <= LPM_FF:ff8.q[2]
Q[3] <= LPM_FF:ff8.q[3]
Q[4] <= LPM_FF:ff8.q[4]
Q[5] <= LPM_FF:ff8.q[5]
Q[6] <= LPM_FF:ff8.q[6]
Q[7] <= LPM_FF:ff8.q[7]
reset => LPM_FF:ff8.aclr
CLK => LPM_FF:ff8.clock
EN => LPM_FF:ff8.enable
LS => LoaderShifter:lsmux.SL
Sel => BUSMUX:mux8.sel
Data1[0] => BUSMUX:mux8.dataa[0]
Data1[1] => BUSMUX:mux8.dataa[1]
Data1[2] => BUSMUX:mux8.dataa[2]
Data1[3] => BUSMUX:mux8.dataa[3]
Data1[4] => BUSMUX:mux8.dataa[4]
Data1[5] => BUSMUX:mux8.dataa[5]
Data1[6] => BUSMUX:mux8.dataa[6]
Data1[7] => BUSMUX:mux8.dataa[7]
Data2[0] => BUSMUX:mux8.datab[0]
Data2[1] => BUSMUX:mux8.datab[1]
Data2[2] => BUSMUX:mux8.datab[2]
Data2[3] => BUSMUX:mux8.datab[3]
Data2[4] => BUSMUX:mux8.datab[4]
Data2[5] => BUSMUX:mux8.datab[5]
Data2[6] => BUSMUX:mux8.datab[6]
Data2[7] => BUSMUX:mux8.datab[7]


|Question1|Datapath:inst1|Register:RegY|LPM_FF:ff8
data[0] => dffs[0].DATAIN
data[1] => dffs[1].DATAIN
data[2] => dffs[2].DATAIN
data[3] => dffs[3].DATAIN
data[4] => dffs[4].DATAIN
data[5] => dffs[5].DATAIN
data[6] => dffs[6].DATAIN
data[7] => dffs[7].DATAIN
clock => dffs[7].CLK
clock => dffs[6].CLK
clock => dffs[5].CLK
clock => dffs[4].CLK
clock => dffs[3].CLK
clock => dffs[2].CLK
clock => dffs[1].CLK
clock => dffs[0].CLK
enable => dffs[7].ENA
enable => dffs[6].ENA
enable => dffs[5].ENA
enable => dffs[4].ENA
enable => dffs[3].ENA
enable => dffs[2].ENA
enable => dffs[1].ENA
enable => dffs[0].ENA
aclr => dffs[7].IN0
aset => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
sload => ~NO_FANOUT~
q[0] <= dffs[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= dffs[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= dffs[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= dffs[3].DB_MAX_OUTPUT_PORT_TYPE
q[4] <= dffs[4].DB_MAX_OUTPUT_PORT_TYPE
q[5] <= dffs[5].DB_MAX_OUTPUT_PORT_TYPE
q[6] <= dffs[6].DB_MAX_OUTPUT_PORT_TYPE
q[7] <= dffs[7].DB_MAX_OUTPUT_PORT_TYPE


|Question1|Datapath:inst1|Register:RegY|LoaderShifter:lsmux
datashift[0] <= out[0].DB_MAX_OUTPUT_PORT_TYPE
datashift[1] <= out[1].DB_MAX_OUTPUT_PORT_TYPE
datashift[2] <= out[2].DB_MAX_OUTPUT_PORT_TYPE
datashift[3] <= out[3].DB_MAX_OUTPUT_PORT_TYPE
datashift[4] <= out[4].DB_MAX_OUTPUT_PORT_TYPE
datashift[5] <= out[5].DB_MAX_OUTPUT_PORT_TYPE
datashift[6] <= out[6].DB_MAX_OUTPUT_PORT_TYPE
datashift[7] <= out[7].DB_MAX_OUTPUT_PORT_TYPE
SL => 21mux:mux7.S
SL => 21mux:mux6.S
SL => 21mux:mux5.S
SL => 21mux:mux4.S
SL => 21mux:mux3.S
SL => 21mux:mux2.S
SL => 21mux:mux1.S
SL => 21mux:mux0.S
data[0] => 21mux:mux0.B
data[1] => 21mux:mux1.B
data[2] => 21mux:mux2.B
data[3] => 21mux:mux3.B
data[4] => 21mux:mux4.B
data[5] => 21mux:mux5.B
data[6] => 21mux:mux6.B
data[7] => 21mux:mux7.B
sdata[0] => 21mux:mux1.A
sdata[1] => 21mux:mux2.A
sdata[2] => 21mux:mux3.A
sdata[3] => 21mux:mux4.A
sdata[4] => 21mux:mux5.A
sdata[5] => 21mux:mux6.A
sdata[6] => 21mux:mux7.A
sdata[7] => ~NO_FANOUT~
SIN => 21mux:mux0.A


|Question1|Datapath:inst1|Register:RegY|LoaderShifter:lsmux|21mux:mux7
Y <= 5.DB_MAX_OUTPUT_PORT_TYPE
A => 6.IN0
S => 6.IN1
S => 7.IN1
B => 8.IN0


|Question1|Datapath:inst1|Register:RegY|LoaderShifter:lsmux|21mux:mux6
Y <= 5.DB_MAX_OUTPUT_PORT_TYPE
A => 6.IN0
S => 6.IN1
S => 7.IN1
B => 8.IN0


|Question1|Datapath:inst1|Register:RegY|LoaderShifter:lsmux|21mux:mux5
Y <= 5.DB_MAX_OUTPUT_PORT_TYPE
A => 6.IN0
S => 6.IN1
S => 7.IN1
B => 8.IN0


|Question1|Datapath:inst1|Register:RegY|LoaderShifter:lsmux|21mux:mux4
Y <= 5.DB_MAX_OUTPUT_PORT_TYPE
A => 6.IN0
S => 6.IN1
S => 7.IN1
B => 8.IN0


|Question1|Datapath:inst1|Register:RegY|LoaderShifter:lsmux|21mux:mux3
Y <= 5.DB_MAX_OUTPUT_PORT_TYPE
A => 6.IN0
S => 6.IN1
S => 7.IN1
B => 8.IN0


|Question1|Datapath:inst1|Register:RegY|LoaderShifter:lsmux|21mux:mux2
Y <= 5.DB_MAX_OUTPUT_PORT_TYPE
A => 6.IN0
S => 6.IN1
S => 7.IN1
B => 8.IN0


|Question1|Datapath:inst1|Register:RegY|LoaderShifter:lsmux|21mux:mux1
Y <= 5.DB_MAX_OUTPUT_PORT_TYPE
A => 6.IN0
S => 6.IN1
S => 7.IN1
B => 8.IN0


|Question1|Datapath:inst1|Register:RegY|LoaderShifter:lsmux|21mux:mux0
Y <= 5.DB_MAX_OUTPUT_PORT_TYPE
A => 6.IN0
S => 6.IN1
S => 7.IN1
B => 8.IN0


|Question1|Datapath:inst1|Register:RegY|BUSMUX:mux8
dataa[0] => lpm_mux:$00000.data[0][0]
dataa[1] => lpm_mux:$00000.data[0][1]
dataa[2] => lpm_mux:$00000.data[0][2]
dataa[3] => lpm_mux:$00000.data[0][3]
dataa[4] => lpm_mux:$00000.data[0][4]
dataa[5] => lpm_mux:$00000.data[0][5]
dataa[6] => lpm_mux:$00000.data[0][6]
dataa[7] => lpm_mux:$00000.data[0][7]
datab[0] => lpm_mux:$00000.data[1][0]
datab[1] => lpm_mux:$00000.data[1][1]
datab[2] => lpm_mux:$00000.data[1][2]
datab[3] => lpm_mux:$00000.data[1][3]
datab[4] => lpm_mux:$00000.data[1][4]
datab[5] => lpm_mux:$00000.data[1][5]
datab[6] => lpm_mux:$00000.data[1][6]
datab[7] => lpm_mux:$00000.data[1][7]
sel => lpm_mux:$00000.sel[0]
result[0] <= lpm_mux:$00000.result[0]
result[1] <= lpm_mux:$00000.result[1]
result[2] <= lpm_mux:$00000.result[2]
result[3] <= lpm_mux:$00000.result[3]
result[4] <= lpm_mux:$00000.result[4]
result[5] <= lpm_mux:$00000.result[5]
result[6] <= lpm_mux:$00000.result[6]
result[7] <= lpm_mux:$00000.result[7]


|Question1|Datapath:inst1|Register:RegY|BUSMUX:mux8|lpm_mux:$00000
data[0][0] => mux_smc:auto_generated.data[0]
data[0][1] => mux_smc:auto_generated.data[1]
data[0][2] => mux_smc:auto_generated.data[2]
data[0][3] => mux_smc:auto_generated.data[3]
data[0][4] => mux_smc:auto_generated.data[4]
data[0][5] => mux_smc:auto_generated.data[5]
data[0][6] => mux_smc:auto_generated.data[6]
data[0][7] => mux_smc:auto_generated.data[7]
data[1][0] => mux_smc:auto_generated.data[8]
data[1][1] => mux_smc:auto_generated.data[9]
data[1][2] => mux_smc:auto_generated.data[10]
data[1][3] => mux_smc:auto_generated.data[11]
data[1][4] => mux_smc:auto_generated.data[12]
data[1][5] => mux_smc:auto_generated.data[13]
data[1][6] => mux_smc:auto_generated.data[14]
data[1][7] => mux_smc:auto_generated.data[15]
sel[0] => mux_smc:auto_generated.sel[0]
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
result[0] <= mux_smc:auto_generated.result[0]
result[1] <= mux_smc:auto_generated.result[1]
result[2] <= mux_smc:auto_generated.result[2]
result[3] <= mux_smc:auto_generated.result[3]
result[4] <= mux_smc:auto_generated.result[4]
result[5] <= mux_smc:auto_generated.result[5]
result[6] <= mux_smc:auto_generated.result[6]
result[7] <= mux_smc:auto_generated.result[7]


|Question1|Datapath:inst1|Register:RegY|BUSMUX:mux8|lpm_mux:$00000|mux_smc:auto_generated
data[0] => result_node[0].IN1
data[1] => result_node[1].IN1
data[2] => result_node[2].IN1
data[3] => result_node[3].IN1
data[4] => result_node[4].IN1
data[5] => result_node[5].IN1
data[6] => result_node[6].IN1
data[7] => result_node[7].IN1
data[8] => result_node[0].IN1
data[9] => result_node[1].IN1
data[10] => result_node[2].IN1
data[11] => result_node[3].IN1
data[12] => result_node[4].IN1
data[13] => result_node[5].IN1
data[14] => result_node[6].IN1
data[15] => result_node[7].IN1
result[0] <= result_node[0].DB_MAX_OUTPUT_PORT_TYPE
result[1] <= result_node[1].DB_MAX_OUTPUT_PORT_TYPE
result[2] <= result_node[2].DB_MAX_OUTPUT_PORT_TYPE
result[3] <= result_node[3].DB_MAX_OUTPUT_PORT_TYPE
result[4] <= result_node[4].DB_MAX_OUTPUT_PORT_TYPE
result[5] <= result_node[5].DB_MAX_OUTPUT_PORT_TYPE
result[6] <= result_node[6].DB_MAX_OUTPUT_PORT_TYPE
result[7] <= result_node[7].DB_MAX_OUTPUT_PORT_TYPE
sel[0] => result_node[7].IN0
sel[0] => _.IN0
sel[0] => result_node[6].IN0
sel[0] => _.IN0
sel[0] => result_node[5].IN0
sel[0] => _.IN0
sel[0] => result_node[4].IN0
sel[0] => _.IN0
sel[0] => result_node[3].IN0
sel[0] => _.IN0
sel[0] => result_node[2].IN0
sel[0] => _.IN0
sel[0] => result_node[1].IN0
sel[0] => _.IN0
sel[0] => result_node[0].IN0
sel[0] => _.IN0


|Question1|Datapath:inst1|Register:RegX
Q[0] <= LPM_FF:ff8.q[0]
Q[1] <= LPM_FF:ff8.q[1]
Q[2] <= LPM_FF:ff8.q[2]
Q[3] <= LPM_FF:ff8.q[3]
Q[4] <= LPM_FF:ff8.q[4]
Q[5] <= LPM_FF:ff8.q[5]
Q[6] <= LPM_FF:ff8.q[6]
Q[7] <= LPM_FF:ff8.q[7]
reset => LPM_FF:ff8.aclr
CLK => LPM_FF:ff8.clock
EN => LPM_FF:ff8.enable
LS => LoaderShifter:lsmux.SL
Sel => BUSMUX:mux8.sel
Data1[0] => BUSMUX:mux8.dataa[0]
Data1[1] => BUSMUX:mux8.dataa[1]
Data1[2] => BUSMUX:mux8.dataa[2]
Data1[3] => BUSMUX:mux8.dataa[3]
Data1[4] => BUSMUX:mux8.dataa[4]
Data1[5] => BUSMUX:mux8.dataa[5]
Data1[6] => BUSMUX:mux8.dataa[6]
Data1[7] => BUSMUX:mux8.dataa[7]
Data2[0] => BUSMUX:mux8.datab[0]
Data2[1] => BUSMUX:mux8.datab[1]
Data2[2] => BUSMUX:mux8.datab[2]
Data2[3] => BUSMUX:mux8.datab[3]
Data2[4] => BUSMUX:mux8.datab[4]
Data2[5] => BUSMUX:mux8.datab[5]
Data2[6] => BUSMUX:mux8.datab[6]
Data2[7] => BUSMUX:mux8.datab[7]


|Question1|Datapath:inst1|Register:RegX|LPM_FF:ff8
data[0] => dffs[0].DATAIN
data[1] => dffs[1].DATAIN
data[2] => dffs[2].DATAIN
data[3] => dffs[3].DATAIN
data[4] => dffs[4].DATAIN
data[5] => dffs[5].DATAIN
data[6] => dffs[6].DATAIN
data[7] => dffs[7].DATAIN
clock => dffs[7].CLK
clock => dffs[6].CLK
clock => dffs[5].CLK
clock => dffs[4].CLK
clock => dffs[3].CLK
clock => dffs[2].CLK
clock => dffs[1].CLK
clock => dffs[0].CLK
enable => dffs[7].ENA
enable => dffs[6].ENA
enable => dffs[5].ENA
enable => dffs[4].ENA
enable => dffs[3].ENA
enable => dffs[2].ENA
enable => dffs[1].ENA
enable => dffs[0].ENA
aclr => dffs[7].IN0
aset => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
sload => ~NO_FANOUT~
q[0] <= dffs[0].DB_MAX_OUTPUT_PORT_TYPE
q[1] <= dffs[1].DB_MAX_OUTPUT_PORT_TYPE
q[2] <= dffs[2].DB_MAX_OUTPUT_PORT_TYPE
q[3] <= dffs[3].DB_MAX_OUTPUT_PORT_TYPE
q[4] <= dffs[4].DB_MAX_OUTPUT_PORT_TYPE
q[5] <= dffs[5].DB_MAX_OUTPUT_PORT_TYPE
q[6] <= dffs[6].DB_MAX_OUTPUT_PORT_TYPE
q[7] <= dffs[7].DB_MAX_OUTPUT_PORT_TYPE


|Question1|Datapath:inst1|Register:RegX|LoaderShifter:lsmux
datashift[0] <= out[0].DB_MAX_OUTPUT_PORT_TYPE
datashift[1] <= out[1].DB_MAX_OUTPUT_PORT_TYPE
datashift[2] <= out[2].DB_MAX_OUTPUT_PORT_TYPE
datashift[3] <= out[3].DB_MAX_OUTPUT_PORT_TYPE
datashift[4] <= out[4].DB_MAX_OUTPUT_PORT_TYPE
datashift[5] <= out[5].DB_MAX_OUTPUT_PORT_TYPE
datashift[6] <= out[6].DB_MAX_OUTPUT_PORT_TYPE
datashift[7] <= out[7].DB_MAX_OUTPUT_PORT_TYPE
SL => 21mux:mux7.S
SL => 21mux:mux6.S
SL => 21mux:mux5.S
SL => 21mux:mux4.S
SL => 21mux:mux3.S
SL => 21mux:mux2.S
SL => 21mux:mux1.S
SL => 21mux:mux0.S
data[0] => 21mux:mux0.B
data[1] => 21mux:mux1.B
data[2] => 21mux:mux2.B
data[3] => 21mux:mux3.B
data[4] => 21mux:mux4.B
data[5] => 21mux:mux5.B
data[6] => 21mux:mux6.B
data[7] => 21mux:mux7.B
sdata[0] => 21mux:mux1.A
sdata[1] => 21mux:mux2.A
sdata[2] => 21mux:mux3.A
sdata[3] => 21mux:mux4.A
sdata[4] => 21mux:mux5.A
sdata[5] => 21mux:mux6.A
sdata[6] => 21mux:mux7.A
sdata[7] => ~NO_FANOUT~
SIN => 21mux:mux0.A


|Question1|Datapath:inst1|Register:RegX|LoaderShifter:lsmux|21mux:mux7
Y <= 5.DB_MAX_OUTPUT_PORT_TYPE
A => 6.IN0
S => 6.IN1
S => 7.IN1
B => 8.IN0


|Question1|Datapath:inst1|Register:RegX|LoaderShifter:lsmux|21mux:mux6
Y <= 5.DB_MAX_OUTPUT_PORT_TYPE
A => 6.IN0
S => 6.IN1
S => 7.IN1
B => 8.IN0


|Question1|Datapath:inst1|Register:RegX|LoaderShifter:lsmux|21mux:mux5
Y <= 5.DB_MAX_OUTPUT_PORT_TYPE
A => 6.IN0
S => 6.IN1
S => 7.IN1
B => 8.IN0


|Question1|Datapath:inst1|Register:RegX|LoaderShifter:lsmux|21mux:mux4
Y <= 5.DB_MAX_OUTPUT_PORT_TYPE
A => 6.IN0
S => 6.IN1
S => 7.IN1
B => 8.IN0


|Question1|Datapath:inst1|Register:RegX|LoaderShifter:lsmux|21mux:mux3
Y <= 5.DB_MAX_OUTPUT_PORT_TYPE
A => 6.IN0
S => 6.IN1
S => 7.IN1
B => 8.IN0


|Question1|Datapath:inst1|Register:RegX|LoaderShifter:lsmux|21mux:mux2
Y <= 5.DB_MAX_OUTPUT_PORT_TYPE
A => 6.IN0
S => 6.IN1
S => 7.IN1
B => 8.IN0


|Question1|Datapath:inst1|Register:RegX|LoaderShifter:lsmux|21mux:mux1
Y <= 5.DB_MAX_OUTPUT_PORT_TYPE
A => 6.IN0
S => 6.IN1
S => 7.IN1
B => 8.IN0


|Question1|Datapath:inst1|Register:RegX|LoaderShifter:lsmux|21mux:mux0
Y <= 5.DB_MAX_OUTPUT_PORT_TYPE
A => 6.IN0
S => 6.IN1
S => 7.IN1
B => 8.IN0


|Question1|Datapath:inst1|Register:RegX|BUSMUX:mux8
dataa[0] => lpm_mux:$00000.data[0][0]
dataa[1] => lpm_mux:$00000.data[0][1]
dataa[2] => lpm_mux:$00000.data[0][2]
dataa[3] => lpm_mux:$00000.data[0][3]
dataa[4] => lpm_mux:$00000.data[0][4]
dataa[5] => lpm_mux:$00000.data[0][5]
dataa[6] => lpm_mux:$00000.data[0][6]
dataa[7] => lpm_mux:$00000.data[0][7]
datab[0] => lpm_mux:$00000.data[1][0]
datab[1] => lpm_mux:$00000.data[1][1]
datab[2] => lpm_mux:$00000.data[1][2]
datab[3] => lpm_mux:$00000.data[1][3]
datab[4] => lpm_mux:$00000.data[1][4]
datab[5] => lpm_mux:$00000.data[1][5]
datab[6] => lpm_mux:$00000.data[1][6]
datab[7] => lpm_mux:$00000.data[1][7]
sel => lpm_mux:$00000.sel[0]
result[0] <= lpm_mux:$00000.result[0]
result[1] <= lpm_mux:$00000.result[1]
result[2] <= lpm_mux:$00000.result[2]
result[3] <= lpm_mux:$00000.result[3]
result[4] <= lpm_mux:$00000.result[4]
result[5] <= lpm_mux:$00000.result[5]
result[6] <= lpm_mux:$00000.result[6]
result[7] <= lpm_mux:$00000.result[7]


|Question1|Datapath:inst1|Register:RegX|BUSMUX:mux8|lpm_mux:$00000
data[0][0] => mux_smc:auto_generated.data[0]
data[0][1] => mux_smc:auto_generated.data[1]
data[0][2] => mux_smc:auto_generated.data[2]
data[0][3] => mux_smc:auto_generated.data[3]
data[0][4] => mux_smc:auto_generated.data[4]
data[0][5] => mux_smc:auto_generated.data[5]
data[0][6] => mux_smc:auto_generated.data[6]
data[0][7] => mux_smc:auto_generated.data[7]
data[1][0] => mux_smc:auto_generated.data[8]
data[1][1] => mux_smc:auto_generated.data[9]
data[1][2] => mux_smc:auto_generated.data[10]
data[1][3] => mux_smc:auto_generated.data[11]
data[1][4] => mux_smc:auto_generated.data[12]
data[1][5] => mux_smc:auto_generated.data[13]
data[1][6] => mux_smc:auto_generated.data[14]
data[1][7] => mux_smc:auto_generated.data[15]
sel[0] => mux_smc:auto_generated.sel[0]
clock => ~NO_FANOUT~
aclr => ~NO_FANOUT~
clken => ~NO_FANOUT~
result[0] <= mux_smc:auto_generated.result[0]
result[1] <= mux_smc:auto_generated.result[1]
result[2] <= mux_smc:auto_generated.result[2]
result[3] <= mux_smc:auto_generated.result[3]
result[4] <= mux_smc:auto_generated.result[4]
result[5] <= mux_smc:auto_generated.result[5]
result[6] <= mux_smc:auto_generated.result[6]
result[7] <= mux_smc:auto_generated.result[7]


|Question1|Datapath:inst1|Register:RegX|BUSMUX:mux8|lpm_mux:$00000|mux_smc:auto_generated
data[0] => result_node[0].IN1
data[1] => result_node[1].IN1
data[2] => result_node[2].IN1
data[3] => result_node[3].IN1
data[4] => result_node[4].IN1
data[5] => result_node[5].IN1
data[6] => result_node[6].IN1
data[7] => result_node[7].IN1
data[8] => result_node[0].IN1
data[9] => result_node[1].IN1
data[10] => result_node[2].IN1
data[11] => result_node[3].IN1
data[12] => result_node[4].IN1
data[13] => result_node[5].IN1
data[14] => result_node[6].IN1
data[15] => result_node[7].IN1
result[0] <= result_node[0].DB_MAX_OUTPUT_PORT_TYPE
result[1] <= result_node[1].DB_MAX_OUTPUT_PORT_TYPE
result[2] <= result_node[2].DB_MAX_OUTPUT_PORT_TYPE
result[3] <= result_node[3].DB_MAX_OUTPUT_PORT_TYPE
result[4] <= result_node[4].DB_MAX_OUTPUT_PORT_TYPE
result[5] <= result_node[5].DB_MAX_OUTPUT_PORT_TYPE
result[6] <= result_node[6].DB_MAX_OUTPUT_PORT_TYPE
result[7] <= result_node[7].DB_MAX_OUTPUT_PORT_TYPE
sel[0] => result_node[7].IN0
sel[0] => _.IN0
sel[0] => result_node[6].IN0
sel[0] => _.IN0
sel[0] => result_node[5].IN0
sel[0] => _.IN0
sel[0] => result_node[4].IN0
sel[0] => _.IN0
sel[0] => result_node[3].IN0
sel[0] => _.IN0
sel[0] => result_node[2].IN0
sel[0] => _.IN0
sel[0] => result_node[1].IN0
sel[0] => _.IN0
sel[0] => result_node[0].IN0
sel[0] => _.IN0


|Question1|NewLCD:inst4
LCD_RS <= LCD_Display:inst.LCD_RS
Reset~ => LCD_Display:inst.reset
CLK_50MHz => LCD_Display:inst.clk_50Mhz
DATA_BUS[0] <> LCD_Display:inst.DATA_BUS[0]
DATA_BUS[1] <> LCD_Display:inst.DATA_BUS[1]
DATA_BUS[2] <> LCD_Display:inst.DATA_BUS[2]
DATA_BUS[3] <> LCD_Display:inst.DATA_BUS[3]
DATA_BUS[4] <> LCD_Display:inst.DATA_BUS[4]
DATA_BUS[5] <> LCD_Display:inst.DATA_BUS[5]
DATA_BUS[6] <> LCD_Display:inst.DATA_BUS[6]
DATA_BUS[7] <> LCD_Display:inst.DATA_BUS[7]
HEX0[0] => LCD_Display:inst.HEX0[0]
HEX0[1] => LCD_Display:inst.HEX0[1]
HEX0[2] => LCD_Display:inst.HEX0[2]
HEX0[3] => LCD_Display:inst.HEX0[3]
HEX1[0] => LCD_Display:inst.HEX1[0]
HEX1[1] => LCD_Display:inst.HEX1[1]
HEX1[2] => LCD_Display:inst.HEX1[2]
HEX1[3] => LCD_Display:inst.HEX1[3]
HEX10[0] => LCD_Display:inst.HEX10[0]
HEX10[1] => LCD_Display:inst.HEX10[1]
HEX10[2] => LCD_Display:inst.HEX10[2]
HEX10[3] => LCD_Display:inst.HEX10[3]
HEX11[0] => LCD_Display:inst.HEX11[0]
HEX11[1] => LCD_Display:inst.HEX11[1]
HEX11[2] => LCD_Display:inst.HEX11[2]
HEX11[3] => LCD_Display:inst.HEX11[3]
HEX12[0] => LCD_Display:inst.HEX12[0]
HEX12[1] => LCD_Display:inst.HEX12[1]
HEX12[2] => LCD_Display:inst.HEX12[2]
HEX12[3] => LCD_Display:inst.HEX12[3]
HEX13[0] => LCD_Display:inst.HEX13[0]
HEX13[1] => LCD_Display:inst.HEX13[1]
HEX13[2] => LCD_Display:inst.HEX13[2]
HEX13[3] => LCD_Display:inst.HEX13[3]
HEX14[0] => LCD_Display:inst.HEX14[0]
HEX14[1] => LCD_Display:inst.HEX14[1]
HEX14[2] => LCD_Display:inst.HEX14[2]
HEX14[3] => LCD_Display:inst.HEX14[3]
HEX15[0] => LCD_Display:inst.HEX15[0]
HEX15[1] => LCD_Display:inst.HEX15[1]
HEX15[2] => LCD_Display:inst.HEX15[2]
HEX15[3] => LCD_Display:inst.HEX15[3]
HEX16[0] => LCD_Display:inst.HEX16[0]
HEX16[1] => LCD_Display:inst.HEX16[1]
HEX16[2] => LCD_Display:inst.HEX16[2]
HEX16[3] => LCD_Display:inst.HEX16[3]
HEX17[0] => LCD_Display:inst.HEX17[0]
HEX17[1] => LCD_Display:inst.HEX17[1]
HEX17[2] => LCD_Display:inst.HEX17[2]
HEX17[3] => LCD_Display:inst.HEX17[3]
HEX18[0] => LCD_Display:inst.HEX18[0]
HEX18[1] => LCD_Display:inst.HEX18[1]
HEX18[2] => LCD_Display:inst.HEX18[2]
HEX18[3] => LCD_Display:inst.HEX18[3]
HEX19[0] => LCD_Display:inst.HEX19[0]
HEX19[1] => LCD_Display:inst.HEX19[1]
HEX19[2] => LCD_Display:inst.HEX19[2]
HEX19[3] => LCD_Display:inst.HEX19[3]
HEX2[0] => LCD_Display:inst.HEX2[0]
HEX2[1] => LCD_Display:inst.HEX2[1]
HEX2[2] => LCD_Display:inst.HEX2[2]
HEX2[3] => LCD_Display:inst.HEX2[3]
HEX20[0] => LCD_Display:inst.HEX20[0]
HEX20[1] => LCD_Display:inst.HEX20[1]
HEX20[2] => LCD_Display:inst.HEX20[2]
HEX20[3] => LCD_Display:inst.HEX20[3]
HEX21[0] => LCD_Display:inst.HEX21[0]
HEX21[1] => LCD_Display:inst.HEX21[1]
HEX21[2] => LCD_Display:inst.HEX21[2]
HEX21[3] => LCD_Display:inst.HEX21[3]
HEX22[0] => LCD_Display:inst.HEX22[0]
HEX22[1] => LCD_Display:inst.HEX22[1]
HEX22[2] => LCD_Display:inst.HEX22[2]
HEX22[3] => LCD_Display:inst.HEX22[3]
HEX23[0] => LCD_Display:inst.HEX23[0]
HEX23[1] => LCD_Display:inst.HEX23[1]
HEX23[2] => LCD_Display:inst.HEX23[2]
HEX23[3] => LCD_Display:inst.HEX23[3]
HEX24[0] => LCD_Display:inst.HEX24[0]
HEX24[1] => LCD_Display:inst.HEX24[1]
HEX24[2] => LCD_Display:inst.HEX24[2]
HEX24[3] => LCD_Display:inst.HEX24[3]
HEX25[0] => LCD_Display:inst.HEX25[0]
HEX25[1] => LCD_Display:inst.HEX25[1]
HEX25[2] => LCD_Display:inst.HEX25[2]
HEX25[3] => LCD_Display:inst.HEX25[3]
HEX26[0] => LCD_Display:inst.HEX26[0]
HEX26[1] => LCD_Display:inst.HEX26[1]
HEX26[2] => LCD_Display:inst.HEX26[2]
HEX26[3] => LCD_Display:inst.HEX26[3]
HEX27[0] => LCD_Display:inst.HEX27[0]
HEX27[1] => LCD_Display:inst.HEX27[1]
HEX27[2] => LCD_Display:inst.HEX27[2]
HEX27[3] => LCD_Display:inst.HEX27[3]
HEX28[0] => LCD_Display:inst.HEX28[0]
HEX28[1] => LCD_Display:inst.HEX28[1]
HEX28[2] => LCD_Display:inst.HEX28[2]
HEX28[3] => LCD_Display:inst.HEX28[3]
HEX29[0] => LCD_Display:inst.HEX29[0]
HEX29[1] => LCD_Display:inst.HEX29[1]
HEX29[2] => LCD_Display:inst.HEX29[2]
HEX29[3] => LCD_Display:inst.HEX29[3]
HEX3[0] => LCD_Display:inst.HEX3[0]
HEX3[1] => LCD_Display:inst.HEX3[1]
HEX3[2] => LCD_Display:inst.HEX3[2]
HEX3[3] => LCD_Display:inst.HEX3[3]
HEX30[0] => LCD_Display:inst.HEX30[0]
HEX30[1] => LCD_Display:inst.HEX30[1]
HEX30[2] => LCD_Display:inst.HEX30[2]
HEX30[3] => LCD_Display:inst.HEX30[3]
HEX31[0] => LCD_Display:inst.HEX31[0]
HEX31[1] => LCD_Display:inst.HEX31[1]
HEX31[2] => LCD_Display:inst.HEX31[2]
HEX31[3] => LCD_Display:inst.HEX31[3]
HEX4[0] => LCD_Display:inst.HEX4[0]
HEX4[1] => LCD_Display:inst.HEX4[1]
HEX4[2] => LCD_Display:inst.HEX4[2]
HEX4[3] => LCD_Display:inst.HEX4[3]
HEX5[0] => LCD_Display:inst.HEX5[0]
HEX5[1] => LCD_Display:inst.HEX5[1]
HEX5[2] => LCD_Display:inst.HEX5[2]
HEX5[3] => LCD_Display:inst.HEX5[3]
HEX6[0] => LCD_Display:inst.HEX6[0]
HEX6[1] => LCD_Display:inst.HEX6[1]
HEX6[2] => LCD_Display:inst.HEX6[2]
HEX6[3] => LCD_Display:inst.HEX6[3]
HEX7[0] => LCD_Display:inst.HEX7[0]
HEX7[1] => LCD_Display:inst.HEX7[1]
HEX7[2] => LCD_Display:inst.HEX7[2]
HEX7[3] => LCD_Display:inst.HEX7[3]
HEX8[0] => LCD_Display:inst.HEX8[0]
HEX8[1] => LCD_Display:inst.HEX8[1]
HEX8[2] => LCD_Display:inst.HEX8[2]
HEX8[3] => LCD_Display:inst.HEX8[3]
HEX9[0] => LCD_Display:inst.HEX9[0]
HEX9[1] => LCD_Display:inst.HEX9[1]
HEX9[2] => LCD_Display:inst.HEX9[2]
HEX9[3] => LCD_Display:inst.HEX9[3]
LCD_E <= LCD_Display:inst.LCD_E
LCD_RW <= LCD_Display:inst.LCD_RW
LCD_STATUS_OUT <= LCD_Display:inst.LCD_STATUS_OUT
LCD_BL_STATUS_OUT <= LCD_Display:inst.LCD_BL_STATUS_OUT


|Question1|NewLCD:inst4|LCD_Display:inst
reset => LCD_RW_INT.PRESET
reset => LCD_RS~reg0.ACLR
reset => LCD_E~reg0.PRESET
reset => DATA_BUS_VALUE[0].ACLR
reset => DATA_BUS_VALUE[1].ACLR
reset => DATA_BUS_VALUE[2].ACLR
reset => DATA_BUS_VALUE[3].PRESET
reset => DATA_BUS_VALUE[4].PRESET
reset => DATA_BUS_VALUE[5].PRESET
reset => DATA_BUS_VALUE[6].ACLR
reset => DATA_BUS_VALUE[7].ACLR
reset => CLK_COUNT_400HZ.OUTPUTSELECT
reset => CLK_COUNT_400HZ.OUTPUTSELECT
reset => CLK_COUNT_400HZ.OUTPUTSELECT
reset => CLK_COUNT_400HZ.OUTPUTSELECT
reset => CLK_COUNT_400HZ.OUTPUTSELECT
reset => CLK_COUNT_400HZ.OUTPUTSELECT
reset => CLK_COUNT_400HZ.OUTPUTSELECT
reset => CLK_COUNT_400HZ.OUTPUTSELECT
reset => CLK_COUNT_400HZ.OUTPUTSELECT
reset => CLK_COUNT_400HZ.OUTPUTSELECT
reset => CLK_COUNT_400HZ.OUTPUTSELECT
reset => CLK_COUNT_400HZ.OUTPUTSELECT
reset => CLK_COUNT_400HZ.OUTPUTSELECT
reset => CLK_COUNT_400HZ.OUTPUTSELECT
reset => CLK_COUNT_400HZ.OUTPUTSELECT
reset => CLK_COUNT_400HZ.OUTPUTSELECT
reset => CLK_COUNT_400HZ.OUTPUTSELECT
reset => CLK_COUNT_400HZ.OUTPUTSELECT
reset => CLK_COUNT_400HZ.OUTPUTSELECT
reset => CLK_COUNT_400HZ.OUTPUTSELECT
reset => CLK_400HZ.OUTPUTSELECT
reset => next_command~3.DATAIN
reset => state~14.DATAIN
reset => CHAR_COUNT[0].ENA
reset => CHAR_COUNT[4].ENA
reset => CHAR_COUNT[3].ENA
reset => CHAR_COUNT[2].ENA
reset => CHAR_COUNT[1].ENA
clk_50Mhz => CLK_400HZ.CLK
clk_50Mhz => CLK_COUNT_400HZ[0].CLK
clk_50Mhz => CLK_COUNT_400HZ[1].CLK
clk_50Mhz => CLK_COUNT_400HZ[2].CLK
clk_50Mhz => CLK_COUNT_400HZ[3].CLK
clk_50Mhz => CLK_COUNT_400HZ[4].CLK
clk_50Mhz => CLK_COUNT_400HZ[5].CLK
clk_50Mhz => CLK_COUNT_400HZ[6].CLK
clk_50Mhz => CLK_COUNT_400HZ[7].CLK
clk_50Mhz => CLK_COUNT_400HZ[8].CLK
clk_50Mhz => CLK_COUNT_400HZ[9].CLK
clk_50Mhz => CLK_COUNT_400HZ[10].CLK
clk_50Mhz => CLK_COUNT_400HZ[11].CLK
clk_50Mhz => CLK_COUNT_400HZ[12].CLK
clk_50Mhz => CLK_COUNT_400HZ[13].CLK
clk_50Mhz => CLK_COUNT_400HZ[14].CLK
clk_50Mhz => CLK_COUNT_400HZ[15].CLK
clk_50Mhz => CLK_COUNT_400HZ[16].CLK
clk_50Mhz => CLK_COUNT_400HZ[17].CLK
clk_50Mhz => CLK_COUNT_400HZ[18].CLK
clk_50Mhz => CLK_COUNT_400HZ[19].CLK
LCD_RS <= LCD_RS~reg0.DB_MAX_OUTPUT_PORT_TYPE
LCD_E <= LCD_E~reg0.DB_MAX_OUTPUT_PORT_TYPE
LCD_RW <= LCD_RW_INT.DB_MAX_OUTPUT_PORT_TYPE
LCD_STATUS_OUT <= <VCC>
LCD_BL_STATUS_OUT <= <VCC>
ROM_ADDRESS[0] <= CHAR_COUNT[0].DB_MAX_OUTPUT_PORT_TYPE
ROM_ADDRESS[1] <= CHAR_COUNT[1].DB_MAX_OUTPUT_PORT_TYPE
ROM_ADDRESS[2] <= CHAR_COUNT[2].DB_MAX_OUTPUT_PORT_TYPE
ROM_ADDRESS[3] <= CHAR_COUNT[3].DB_MAX_OUTPUT_PORT_TYPE
ROM_ADDRESS[4] <= CHAR_COUNT[4].DB_MAX_OUTPUT_PORT_TYPE
READ_ROM <= CLK_400HZ.DB_MAX_OUTPUT_PORT_TYPE
HEX0[0] => Mux3.IN0
HEX0[1] => Mux2.IN0
HEX0[2] => Mux1.IN0
HEX0[3] => Mux0.IN0
HEX1[0] => Mux3.IN1
HEX1[1] => Mux2.IN1
HEX1[2] => Mux1.IN1
HEX1[3] => Mux0.IN1
HEX2[0] => Mux3.IN2
HEX2[1] => Mux2.IN2
HEX2[2] => Mux1.IN2
HEX2[3] => Mux0.IN2
HEX3[0] => Mux3.IN3
HEX3[1] => Mux2.IN3
HEX3[2] => Mux1.IN3
HEX3[3] => Mux0.IN3
HEX4[0] => Mux3.IN4
HEX4[1] => Mux2.IN4
HEX4[2] => Mux1.IN4
HEX4[3] => Mux0.IN4
HEX5[0] => Mux3.IN5
HEX5[1] => Mux2.IN5
HEX5[2] => Mux1.IN5
HEX5[3] => Mux0.IN5
HEX6[0] => Mux3.IN6
HEX6[1] => Mux2.IN6
HEX6[2] => Mux1.IN6
HEX6[3] => Mux0.IN6
HEX7[0] => Mux3.IN7
HEX7[1] => Mux2.IN7
HEX7[2] => Mux1.IN7
HEX7[3] => Mux0.IN7
HEX8[0] => Mux3.IN8
HEX8[1] => Mux2.IN8
HEX8[2] => Mux1.IN8
HEX8[3] => Mux0.IN8
HEX9[0] => Mux3.IN9
HEX9[1] => Mux2.IN9
HEX9[2] => Mux1.IN9
HEX9[3] => Mux0.IN9
HEX10[0] => Mux3.IN10
HEX10[1] => Mux2.IN10
HEX10[2] => Mux1.IN10
HEX10[3] => Mux0.IN10
HEX11[0] => Mux3.IN11
HEX11[1] => Mux2.IN11
HEX11[2] => Mux1.IN11
HEX11[3] => Mux0.IN11
HEX12[0] => Mux3.IN12
HEX12[1] => Mux2.IN12
HEX12[2] => Mux1.IN12
HEX12[3] => Mux0.IN12
HEX13[0] => Mux3.IN13
HEX13[1] => Mux2.IN13
HEX13[2] => Mux1.IN13
HEX13[3] => Mux0.IN13
HEX14[0] => Mux3.IN14
HEX14[1] => Mux2.IN14
HEX14[2] => Mux1.IN14
HEX14[3] => Mux0.IN14
HEX15[0] => Mux3.IN15
HEX15[1] => Mux2.IN15
HEX15[2] => Mux1.IN15
HEX15[3] => Mux0.IN15
HEX16[0] => Mux3.IN16
HEX16[1] => Mux2.IN16
HEX16[2] => Mux1.IN16
HEX16[3] => Mux0.IN16
HEX17[0] => Mux3.IN17
HEX17[1] => Mux2.IN17
HEX17[2] => Mux1.IN17
HEX17[3] => Mux0.IN17
HEX18[0] => Mux3.IN18
HEX18[1] => Mux2.IN18
HEX18[2] => Mux1.IN18
HEX18[3] => Mux0.IN18
HEX19[0] => Mux3.IN19
HEX19[1] => Mux2.IN19
HEX19[2] => Mux1.IN19
HEX19[3] => Mux0.IN19
HEX20[0] => Mux3.IN20
HEX20[1] => Mux2.IN20
HEX20[2] => Mux1.IN20
HEX20[3] => Mux0.IN20
HEX21[0] => Mux3.IN21
HEX21[1] => Mux2.IN21
HEX21[2] => Mux1.IN21
HEX21[3] => Mux0.IN21
HEX22[0] => Mux3.IN22
HEX22[1] => Mux2.IN22
HEX22[2] => Mux1.IN22
HEX22[3] => Mux0.IN22
HEX23[0] => Mux3.IN23
HEX23[1] => Mux2.IN23
HEX23[2] => Mux1.IN23
HEX23[3] => Mux0.IN23
HEX24[0] => Mux3.IN24
HEX24[1] => Mux2.IN24
HEX24[2] => Mux1.IN24
HEX24[3] => Mux0.IN24
HEX25[0] => Mux3.IN25
HEX25[1] => Mux2.IN25
HEX25[2] => Mux1.IN25
HEX25[3] => Mux0.IN25
HEX26[0] => Mux3.IN26
HEX26[1] => Mux2.IN26
HEX26[2] => Mux1.IN26
HEX26[3] => Mux0.IN26
HEX27[0] => Mux3.IN27
HEX27[1] => Mux2.IN27
HEX27[2] => Mux1.IN27
HEX27[3] => Mux0.IN27
HEX28[0] => Mux3.IN28
HEX28[1] => Mux2.IN28
HEX28[2] => Mux1.IN28
HEX28[3] => Mux0.IN28
HEX29[0] => Mux3.IN29
HEX29[1] => Mux2.IN29
HEX29[2] => Mux1.IN29
HEX29[3] => Mux0.IN29
HEX30[0] => Mux3.IN30
HEX30[1] => Mux2.IN30
HEX30[2] => Mux1.IN30
HEX30[3] => Mux0.IN30
HEX31[0] => Mux3.IN31
HEX31[1] => Mux2.IN31
HEX31[2] => Mux1.IN31
HEX31[3] => Mux0.IN31
CHAR[0] => Next_Char[0].DATAB
CHAR[1] => Next_Char[1].DATAB
CHAR[2] => Next_Char[2].DATAB
CHAR[3] => Next_Char[3].DATAB
CHAR[4] => Equal0.IN7
CHAR[4] => Next_Char[4].DATAB
CHAR[5] => Equal0.IN6
CHAR[5] => Next_Char[5].DATAB
CHAR[6] => Equal0.IN5
CHAR[6] => Next_Char[6].DATAB
CHAR[7] => Equal0.IN4
CHAR[7] => Next_Char[7].DATAB
DATA_BUS[0] <> DATA_BUS[0]
DATA_BUS[1] <> DATA_BUS[1]
DATA_BUS[2] <> DATA_BUS[2]
DATA_BUS[3] <> DATA_BUS[3]
DATA_BUS[4] <> DATA_BUS[4]
DATA_BUS[5] <> DATA_BUS[5]
DATA_BUS[6] <> DATA_BUS[6]
DATA_BUS[7] <> DATA_BUS[7]


|Question1|NewLCD:inst4|lpm_rom0:inst1
address[0] => altsyncram:altsyncram_component.address_a[0]
address[1] => altsyncram:altsyncram_component.address_a[1]
address[2] => altsyncram:altsyncram_component.address_a[2]
address[3] => altsyncram:altsyncram_component.address_a[3]
address[4] => altsyncram:altsyncram_component.address_a[4]
clock => altsyncram:altsyncram_component.clock0
q[0] <= altsyncram:altsyncram_component.q_a[0]
q[1] <= altsyncram:altsyncram_component.q_a[1]
q[2] <= altsyncram:altsyncram_component.q_a[2]
q[3] <= altsyncram:altsyncram_component.q_a[3]
q[4] <= altsyncram:altsyncram_component.q_a[4]
q[5] <= altsyncram:altsyncram_component.q_a[5]
q[6] <= altsyncram:altsyncram_component.q_a[6]
q[7] <= altsyncram:altsyncram_component.q_a[7]


|Question1|NewLCD:inst4|lpm_rom0:inst1|altsyncram:altsyncram_component
wren_a => ~NO_FANOUT~
rden_a => ~NO_FANOUT~
wren_b => ~NO_FANOUT~
rden_b => ~NO_FANOUT~
data_a[0] => ~NO_FANOUT~
data_a[1] => ~NO_FANOUT~
data_a[2] => ~NO_FANOUT~
data_a[3] => ~NO_FANOUT~
data_a[4] => ~NO_FANOUT~
data_a[5] => ~NO_FANOUT~
data_a[6] => ~NO_FANOUT~
data_a[7] => ~NO_FANOUT~
data_b[0] => ~NO_FANOUT~
address_a[0] => altsyncram_7f71:auto_generated.address_a[0]
address_a[1] => altsyncram_7f71:auto_generated.address_a[1]
address_a[2] => altsyncram_7f71:auto_generated.address_a[2]
address_a[3] => altsyncram_7f71:auto_generated.address_a[3]
address_a[4] => altsyncram_7f71:auto_generated.address_a[4]
address_b[0] => ~NO_FANOUT~
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_7f71:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_7f71:auto_generated.q_a[0]
q_a[1] <= altsyncram_7f71:auto_generated.q_a[1]
q_a[2] <= altsyncram_7f71:auto_generated.q_a[2]
q_a[3] <= altsyncram_7f71:auto_generated.q_a[3]
q_a[4] <= altsyncram_7f71:auto_generated.q_a[4]
q_a[5] <= altsyncram_7f71:auto_generated.q_a[5]
q_a[6] <= altsyncram_7f71:auto_generated.q_a[6]
q_a[7] <= altsyncram_7f71:auto_generated.q_a[7]
q_b[0] <= <GND>
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|Question1|NewLCD:inst4|lpm_rom0:inst1|altsyncram:altsyncram_component|altsyncram_7f71:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[0] => ram_block1a1.PORTAADDR
address_a[0] => ram_block1a2.PORTAADDR
address_a[0] => ram_block1a3.PORTAADDR
address_a[0] => ram_block1a4.PORTAADDR
address_a[0] => ram_block1a5.PORTAADDR
address_a[0] => ram_block1a6.PORTAADDR
address_a[0] => ram_block1a7.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[1] => ram_block1a1.PORTAADDR1
address_a[1] => ram_block1a2.PORTAADDR1
address_a[1] => ram_block1a3.PORTAADDR1
address_a[1] => ram_block1a4.PORTAADDR1
address_a[1] => ram_block1a5.PORTAADDR1
address_a[1] => ram_block1a6.PORTAADDR1
address_a[1] => ram_block1a7.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[2] => ram_block1a1.PORTAADDR2
address_a[2] => ram_block1a2.PORTAADDR2
address_a[2] => ram_block1a3.PORTAADDR2
address_a[2] => ram_block1a4.PORTAADDR2
address_a[2] => ram_block1a5.PORTAADDR2
address_a[2] => ram_block1a6.PORTAADDR2
address_a[2] => ram_block1a7.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[3] => ram_block1a1.PORTAADDR3
address_a[3] => ram_block1a2.PORTAADDR3
address_a[3] => ram_block1a3.PORTAADDR3
address_a[3] => ram_block1a4.PORTAADDR3
address_a[3] => ram_block1a5.PORTAADDR3
address_a[3] => ram_block1a6.PORTAADDR3
address_a[3] => ram_block1a7.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[4] => ram_block1a1.PORTAADDR4
address_a[4] => ram_block1a2.PORTAADDR4
address_a[4] => ram_block1a3.PORTAADDR4
address_a[4] => ram_block1a4.PORTAADDR4
address_a[4] => ram_block1a5.PORTAADDR4
address_a[4] => ram_block1a6.PORTAADDR4
address_a[4] => ram_block1a7.PORTAADDR4
clock0 => ram_block1a0.CLK0
clock0 => ram_block1a1.CLK0
clock0 => ram_block1a2.CLK0
clock0 => ram_block1a3.CLK0
clock0 => ram_block1a4.CLK0
clock0 => ram_block1a5.CLK0
clock0 => ram_block1a6.CLK0
clock0 => ram_block1a7.CLK0
q_a[0] <= ram_block1a0.PORTADATAOUT
q_a[1] <= ram_block1a1.PORTADATAOUT
q_a[2] <= ram_block1a2.PORTADATAOUT
q_a[3] <= ram_block1a3.PORTADATAOUT
q_a[4] <= ram_block1a4.PORTADATAOUT
q_a[5] <= ram_block1a5.PORTADATAOUT
q_a[6] <= ram_block1a6.PORTADATAOUT
q_a[7] <= ram_block1a7.PORTADATAOUT


|Question1|SEG7_LUT:inst3
oSEG[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
oSEG[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
oSEG[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
oSEG[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
oSEG[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
oSEG[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
oSEG[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
iDIG[0] => Decoder0.IN3
iDIG[1] => Decoder0.IN2
iDIG[2] => Decoder0.IN1
iDIG[3] => Decoder0.IN0


|Question1|SEG7_LUT:inst2
oSEG[0] <= WideOr6.DB_MAX_OUTPUT_PORT_TYPE
oSEG[1] <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE
oSEG[2] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
oSEG[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
oSEG[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
oSEG[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
oSEG[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
iDIG[0] => Decoder0.IN3
iDIG[1] => Decoder0.IN2
iDIG[2] => Decoder0.IN1
iDIG[3] => Decoder0.IN0


